-- MySQL Script generated by MySQL Workbench
-- Tue Aug  8 13:43:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzaStore
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `pizzaStore` ;

CREATE SCHEMA IF NOT EXISTS `pizzaStore` DEFAULT CHARACTER SET utf8 ;
USE `pizzaStore` ;

-- -----------------------------------------------------
-- Table `pizzaStore`.`addresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`addresses` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`addresses` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `Address` VARCHAR(100) NULL,
  `postcode` INT UNSIGNED NULL,
  `city` VARCHAR(45) NULL,
  `province` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzaStore`.`branches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`branches` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`branches` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `AddressId` INT UNSIGNED NOT NULL COMMENT 'Vincula con una tabla direcciones que servirá para clientes también',
  PRIMARY KEY (`id`),
  INDEX `fkAddress_idx` (`AddressId` ASC) VISIBLE,
  CONSTRAINT `fkAddressBranches`
    FOREIGN KEY (`AddressId`)
    REFERENCES `pizzaStore`.`addresses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzaStore`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`categories` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`categories` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'En el cas de les pizzes existeixen diverses categories que poden anar canviant de nom al llarg de l\'any. Una pizza només pot estar dins d\'una categoria, però una categoria pot tenir moltes pizzes.';


-- -----------------------------------------------------
-- Table `pizzaStore`.`clients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`clients` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`clients` (
  `NIF` VARCHAR(9) NOT NULL COMMENT 'Vincula con la tabla persons',
  `AddressId` INT UNSIGNED NULL COMMENT 'Vincula a tabla addresses',
  INDEX `fkAddress_idx` (`AddressId` ASC) VISIBLE,
  PRIMARY KEY (`NIF`),
  CONSTRAINT `fkPersonClients`
    FOREIGN KEY (`NIF`)
    REFERENCES `pizzaStore`.`persons` (`NIF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkAddressClients`
    FOREIGN KEY (`AddressId`)
    REFERENCES `pizzaStore`.`addresses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Almaceno NIF e idDIrección. Ambos vinculados a sus respectivas tablas.';


-- -----------------------------------------------------
-- Table `pizzaStore`.`deliveries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`deliveries` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`deliveries` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `EmployeeId` VARCHAR(9) NULL COMMENT 'Vincula con el repartidor',
  `deliveryTime` DATETIME NULL,
  `OrderId` INT UNSIGNED NULL COMMENT 'Vincula de qué demanda fue el envío',
  PRIMARY KEY (`id`),
  INDEX `fkOrder_idx` (`OrderId` ASC) VISIBLE,
  CONSTRAINT `fkOrder`
    FOREIGN KEY (`OrderId`)
    REFERENCES `pizzaStore`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkEmployee`
    FOREIGN KEY (`EmployeeId`)
    REFERENCES `pizzaStore`.`employees` (`NIF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Per a les comandes de repartiment a domicili interessa guardar qui és el repartidor/a que fa el lliurament de la comanda i la data/hora del moment del lliurament.';


-- -----------------------------------------------------
-- Table `pizzaStore`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`employees` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`employees` (
  `NIF` VARCHAR(9) NULL COMMENT 'Vincula con persons',
  `cook` TINYINT NULL COMMENT 'Recomiendan usar tiniInt para Boolean. Cook = 1,  Delivery = 0',
  `BranchId` INT UNSIGNED NOT NULL COMMENT 'Card 1 a N con employees',
  INDEX `fkBranch_idx` (`BranchId` ASC) VISIBLE,
  CONSTRAINT `fkPersonEmployees`
    FOREIGN KEY (`NIF`)
    REFERENCES `pizzaStore`.`persons` (`NIF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkBranch`
    FOREIGN KEY (`BranchId`)
    REFERENCES `pizzaStore`.`branches` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzaStore`.`orderDetails`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`orderDetails` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`orderDetails` (
  `id` INT UNSIGNED NULL,
  `productQuantity` INT NULL,
  `ProductsId` INT UNSIGNED NULL COMMENT 'Vincula con la tabla products',
  `OrderId` INT UNSIGNED NULL COMMENT 'A qué orden pertenece este desgloce',
  PRIMARY KEY (`id`),
  INDEX `fkProducts_idx` (`ProductsId` ASC) VISIBLE,
  INDEX `fkOrder_idx` (`OrderId` ASC) VISIBLE,
  UNIQUE INDEX `ProductsId_UNIQUE` (`ProductsId` ASC) VISIBLE,
  CONSTRAINT `fkProducts`
    FOREIGN KEY (`ProductsId`)
    REFERENCES `pizzaStore`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkOrder`
    FOREIGN KEY (`OrderId`)
    REFERENCES `pizzaStore`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzaStore`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`orders` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`orders` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `orderTime` DATETIME NULL,
  `delivery` TINYINT(1) UNSIGNED NULL COMMENT '1 es que se reparte a domicilio',
  `ClientId` VARCHAR(9) NULL,
  `BranchId` INT UNSIGNED NULL COMMENT 'Identifica en qué tienda se vendió',
  PRIMARY KEY (`id`),
  INDEX `fkClient_idx` (`ClientId` ASC) VISIBLE,
  INDEX `fkBranch_idx` (`BranchId` ASC) VISIBLE,
  CONSTRAINT `fkClient`
    FOREIGN KEY (`ClientId`)
    REFERENCES `pizzaStore`.`clients` (`NIF`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkBranch`
    FOREIGN KEY (`BranchId`)
    REFERENCES `pizzaStore`.`branches` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Una persona pot realitzar moltes comandes, però una única comanda només pot ser realitzat per una única persona.\n De cada comanda s\'emmagatzema un identificador únic: \nData/hora, si la comanda és per a repartiment a domicili o per a recollir en botiga, la quantitat de productes que s\'han seleccionat de cada tipus, el preu total.\nUna comanda pot constar d\'un o diversos productes.';


-- -----------------------------------------------------
-- Table `pizzaStore`.`persons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`persons` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`persons` (
  `NIF` VARCHAR(9) NULL COMMENT 'Lo uso como PK porque ya es único',
  `name` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NULL,
  `phone` INT UNSIGNED NULL,
  PRIMARY KEY (`NIF`))
ENGINE = InnoDB
COMMENT = 'La uso para clientes y empleados';


-- -----------------------------------------------------
-- Table `pizzaStore`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzaStore`.`products` ;

CREATE TABLE IF NOT EXISTS `pizzaStore`.`products` (
  `id` INT UNSIGNED NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(150) NULL,
  `image` BLOB NULL COMMENT 'Lo \"correcto\" sería una ruta de enlace en un Varchar',
  `price` DECIMAL(10,2) NULL,
  `type` ENUM('pizza', 'burger', 'drink') NULL COMMENT 'Más lindo sería una tabla categorías de productos, pero dice que sólo hay esos',
  `id_category` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_category_idx` (`id_category` ASC) VISIBLE,
  CONSTRAINT `fk_category`
    FOREIGN KEY (`id_category`)
    REFERENCES `pizzaStore`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
